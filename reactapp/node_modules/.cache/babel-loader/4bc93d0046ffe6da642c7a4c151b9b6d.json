{"ast":null,"code":"var _jsxFileName = \"/home/suomi/JS_training/batch19/projets/MorningNews/part2/Backend/reactapp/src/ScreenHome.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Input, Button } from 'antd';\n\nfunction ScreenHome(props) {\n  const [isLogin, setIsLogin] = useState(false);\n  const [error, setError] = useState('');\n  const [signinEmail, setsigninEmail] = useState('');\n  const [signinPassword, setsigninPassword] = useState('');\n  const [signupName, setsignupName] = useState('');\n  const [signupEmail, setsignupEmail] = useState('');\n  const [signupPassword, setsignupPassword] = useState('');\n\n  const handleSignIn = async () => {\n    let url = '/sign-in';\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `email=${signinEmail}&password=${signinPassword}`\n    };\n    let sources = await fetch(url, options);\n    let response = await sources.json();\n    console.log('signin response ', response);\n\n    if (response.success) {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n      setError(response.error);\n    }\n  };\n\n  const handleSignUp = async () => {\n    let url = '/sign-up';\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `name=${signupName}&email=${signupEmail}&password=${signupPassword}`\n    };\n    let sources = await fetch(url, options);\n    let response = await sources.json(); //console.log('signup response ',response)\n\n    if (response.success) {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n      setError(response.error);\n    }\n  };\n\n  if (isLogin) {\n    return React.createElement(Redirect, {\n      to: \"/sources\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n  const ShowError = () => {\n    if (error) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, error, \" \");\n    } else {\n      return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"back-image-loginpage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ShowError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Login-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"signinEmail\",\n    className: \"Login-input\",\n    placeholder: \"arthur@lacapsule.com\",\n    onChange: e => setsigninEmail(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Input.Password, {\n    id: \"signinPassword\",\n    className: \"Login-input\",\n    placeholder: \"password\",\n    onChange: e => setsigninPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => handleSignIn(),\n    style: {\n      width: '80px'\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Sign-in\")), React.createElement(\"div\", {\n    className: \"Sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"signupName\",\n    className: \"Login-input\",\n    placeholder: \"Arthur G\",\n    onChange: e => setsignupName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"signupEmail\",\n    className: \"Login-input\",\n    placeholder: \"arthur@lacapsule.com\",\n    onChange: e => setsignupEmail(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Input.Password, {\n    id: \"signupPassword\",\n    className: \"Login-input\",\n    placeholder: \"password\",\n    onChange: e => setsignupPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => handleSignUp(),\n    style: {\n      width: '80px'\n    },\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Sign-up\"))));\n}\n\nexport default ScreenHome;","map":{"version":3,"sources":["/home/suomi/JS_training/batch19/projets/MorningNews/part2/Backend/reactapp/src/ScreenHome.js"],"names":["React","useState","Redirect","Input","Button","ScreenHome","props","isLogin","setIsLogin","error","setError","signinEmail","setsigninEmail","signinPassword","setsigninPassword","signupName","setsignupName","signupEmail","setsignupEmail","signupPassword","setsignupPassword","handleSignIn","url","options","method","headers","body","sources","fetch","response","json","console","log","success","handleSignUp","ShowError","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Input, Button } from 'antd';\n\n\n\nfunction ScreenHome(props) {\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [error, setError] = useState('');\n  \n  const [signinEmail, setsigninEmail] = useState('');\n  const [signinPassword, setsigninPassword] = useState('');\n  \n  \n  const [signupName, setsignupName] = useState('');\n  const [signupEmail, setsignupEmail] = useState('');\n  const [signupPassword, setsignupPassword] = useState('');\n  \n  \n  \n  \n  \tconst handleSignIn = async () => {\n\t\tlet url = '/sign-in';\n\t\tlet options = {  \n\t\t\tmethod: 'POST',\n\t\t\theaders: {'Content-Type':'application/x-www-form-urlencoded'},\n\t\t\tbody: `email=${signinEmail}&password=${signinPassword}` };\n\n\t\tlet sources = await fetch( url, options );\n\t\tlet response = await sources.json();\n\t\tconsole.log('signin response ',response)\n\t\tif ( response.success ) { \n\t\t\tsetIsLogin(true) \n\t\t} else {\n\t\t\tsetIsLogin(false);\n\t\t\tsetError( response.error )\n\t\t}\n  \t}\n  \n  \n  \n  \tconst handleSignUp = async () => {\n\t\tlet url = '/sign-up';\n\t\tlet options = {  \n\t\t\tmethod: 'POST',\n\t\t\theaders: {'Content-Type':'application/x-www-form-urlencoded'},\n\t\t\tbody: `name=${signupName}&email=${signupEmail}&password=${signupPassword}` };\n\n\t\tlet sources = await fetch( url, options );\n\t\tlet response = await sources.json();\n\t\t//console.log('signup response ',response)\n\t\tif ( response.success ) { \n\t\t\tsetIsLogin(true);\n\t\t} else {\n\t\t\tsetIsLogin(false);\n\t\t\tsetError( response.error )\n\t\t}\n  \t}\n  \t\n\tif ( isLogin ) { \n    \treturn( <Redirect to=\"/sources\" /> )  \n   }\n\n  \n  \n  \tconst ShowError = () => {\n\t\tif ( error ) { \n\t\t\treturn( <h1>{error} </h1> ); \n\t\t}  \n\t\telse { return null ;}\n\t}\n\n  \n  \n  return (\n  \t<div className=\"back-image-loginpage\">\n  \t\n\t\t<ShowError />\n\t\t\n\t\t<div className=\"Login-page\">\n\n\t\t\t{/* SIGN-IN */}\n\n\t\t\t<div className=\"Sign\">\n\t\t\t\t\t\n\t\t\t\t<Input id=\"signinEmail\" className=\"Login-input\" placeholder=\"arthur@lacapsule.com\" \n\t\t\t\t\tonChange={(e) => setsigninEmail(e.target.value)} required />\n\n\t\t\t\t<Input.Password id=\"signinPassword\" className=\"Login-input\" placeholder=\"password\"\n\t\t\t\t\tonChange={(e) => setsigninPassword(e.target.value)} required />\n\n\n\t\t\t\t<Button onClick={()=>handleSignIn()} style={{width:'80px'}} type=\"primary\">Sign-in</Button>\n\n\t\t\t</div>\n\n\t\t\t{/* SIGN-UP */}\n\n\t\t\t<div className=\"Sign\">\n\t\t\t\t\t\t\n\t\t\t\t<Input id=\"signupName\" className=\"Login-input\" placeholder=\"Arthur G\" \n\t\t\t\t\tonChange={(e) => setsignupName(e.target.value)} required />\n\t\t\t\t\t\n\t\t\t\t<Input id=\"signupEmail\" className=\"Login-input\" placeholder=\"arthur@lacapsule.com\" \n\t\t\t\t\tonChange={(e) => setsignupEmail(e.target.value)} required />\n\n\t\t\t\t<Input.Password id=\"signupPassword\" className=\"Login-input\" placeholder=\"password\"\n\t\t\t\t\tonChange={(e) => setsignupPassword(e.target.value)} required />\n\n\t\t\t\t<Button onClick={()=>handleSignUp()} style={{width:'80px'}} type=\"primary\">Sign-up</Button>\n\n\t\t\t</div>\n\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default ScreenHome;\n"]},"metadata":{},"sourceType":"module"}